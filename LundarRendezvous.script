%General Mission Analysis Tool(GMAT) Script
%Created: 2021-02-18 16:53:58

%This script developed by GMAT creators
%Edited by Daniel Gochenaur
%Modified by Youssef Noureddine to incorporate Lunar Rendezvous


%----------------------------------------
%---------- Spacecraft
%----------------------------------------

Create Spacecraft MoonSat;
GMAT MoonSat.DateFormat = UTCGregorian;
GMAT MoonSat.Epoch = '10 Oct 2024 20:45:00.000';
GMAT MoonSat.CoordinateSystem = EarthMJ2000Eq;
GMAT MoonSat.DisplayStateType = Keplerian;
GMAT MoonSat.SMA = 6978.1363;
GMAT MoonSat.ECC = 3.083634674369106e-24;
GMAT MoonSat.INC = 28.69999999999999;
GMAT MoonSat.RAAN = 360;
GMAT MoonSat.AOP = 0;
GMAT MoonSat.TA = 1.478779333471098e-06;
GMAT MoonSat.DryMass = 850;
GMAT MoonSat.Cd = 2.2;
GMAT MoonSat.Cr = 1.8;
GMAT MoonSat.DragArea = 15;
GMAT MoonSat.SRPArea = 20;
GMAT MoonSat.SPADDragScaleFactor = 1;
GMAT MoonSat.SPADSRPScaleFactor = 1;
GMAT MoonSat.NAIFId = -10001001;
GMAT MoonSat.NAIFIdReferenceFrame = -9001001;
GMAT MoonSat.OrbitColor = Red;
GMAT MoonSat.TargetColor = Teal;
GMAT MoonSat.OrbitErrorCovariance = [ 1e+70 0 0 0 0 0 ; 0 1e+70 0 0 0 0 ; 0 0 1e+70 0 0 0 ; 0 0 0 1e+70 0 0 ; 0 0 0 0 1e+70 0 ; 0 0 0 0 0 1e+70 ];
GMAT MoonSat.CdSigma = 1e+70;
GMAT MoonSat.CrSigma = 1e+70;
GMAT MoonSat.Id = 'SatId';
GMAT MoonSat.Attitude = CoordinateSystemFixed;
GMAT MoonSat.SPADSRPInterpolationMethod = Bilinear;
GMAT MoonSat.SPADSRPScaleFactorSigma = 1e+70;
GMAT MoonSat.SPADDragInterpolationMethod = Bilinear;
GMAT MoonSat.SPADDragScaleFactorSigma = 1e+70;
GMAT MoonSat.ModelFile = 'aura.3ds';
GMAT MoonSat.ModelOffsetX = 0;
GMAT MoonSat.ModelOffsetY = 0;
GMAT MoonSat.ModelOffsetZ = 0;
GMAT MoonSat.ModelRotationX = 0;
GMAT MoonSat.ModelRotationY = 0;
GMAT MoonSat.ModelRotationZ = 0;
GMAT MoonSat.ModelScale = 1;
GMAT MoonSat.AttitudeDisplayStateType = 'Quaternion';
GMAT MoonSat.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT MoonSat.AttitudeCoordinateSystem = EarthMJ2000Eq;
GMAT MoonSat.EulerAngleSequence = '321';
%This script developed by GMAT creators
%Edited by Daniel Gochenaur


%----------------------------------------
%---------- Spacecraft
%----------------------------------------

Create Spacecraft InitSat;
GMAT InitSat.DateFormat = UTCGregorian;
GMAT InitSat.Epoch = '01 Oct 2025 01:00:00.000';
GMAT InitSat.CoordinateSystem = EarthMJ2000Eq;
GMAT InitSat.DisplayStateType = Cartesian;
GMAT InitSat.X = 7100;
GMAT InitSat.Y = 0;
GMAT InitSat.Z = 1300;
GMAT InitSat.VX = 0;
GMAT InitSat.VY = 7.35;
GMAT InitSat.VZ = 1;
GMAT InitSat.DryMass = 850;
GMAT InitSat.Cd = 2.2;
GMAT InitSat.Cr = 1.8;
GMAT InitSat.DragArea = 15;
GMAT InitSat.SRPArea = 1;
GMAT InitSat.SPADDragScaleFactor = 1;
GMAT InitSat.SPADSRPScaleFactor = 1;
GMAT InitSat.NAIFId = -10002001;
GMAT InitSat.NAIFIdReferenceFrame = -9002001;
GMAT InitSat.OrbitColor = Green;
GMAT InitSat.TargetColor = LightGray;
GMAT InitSat.OrbitErrorCovariance = [ 1e+70 0 0 0 0 0 ; 0 1e+70 0 0 0 0 ; 0 0 1e+70 0 0 0 ; 0 0 0 1e+70 0 0 ; 0 0 0 0 1e+70 0 ; 0 0 0 0 0 1e+70 ];
GMAT InitSat.CdSigma = 1e+70;
GMAT InitSat.CrSigma = 1e+70;
GMAT InitSat.Id = 'SatId';
GMAT InitSat.Attitude = CoordinateSystemFixed;
GMAT InitSat.SPADSRPInterpolationMethod = Bilinear;
GMAT InitSat.SPADSRPScaleFactorSigma = 1e+70;
GMAT InitSat.SPADDragInterpolationMethod = Bilinear;
GMAT InitSat.SPADDragScaleFactorSigma = 1e+70;
GMAT InitSat.ModelFile = 'aura.3ds';
GMAT InitSat.ModelOffsetX = 0;
GMAT InitSat.ModelOffsetY = 0;
GMAT InitSat.ModelOffsetZ = 0;
GMAT InitSat.ModelRotationX = 0;
GMAT InitSat.ModelRotationY = 0;
GMAT InitSat.ModelRotationZ = 0;
GMAT InitSat.ModelScale = 0.001;
GMAT InitSat.AttitudeDisplayStateType = 'Quaternion';
GMAT InitSat.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT InitSat.AttitudeCoordinateSystem = EarthMJ2000Eq;
GMAT InitSat.EulerAngleSequence = '321';

Create Spacecraft Spacecraft1;
GMAT Spacecraft1.DateFormat = UTCGregorian;
GMAT Spacecraft1.Epoch = '10 Oct 2024 20:45:00.000';
GMAT Spacecraft1.CoordinateSystem = MoonInertial;
GMAT Spacecraft1.DisplayStateType = Keplerian;
GMAT Spacecraft1.SMA = 1938.000000000273;
GMAT Spacecraft1.ECC = 1.755485073714793e-13;
GMAT Spacecraft1.INC = 90.00000000000006;
GMAT Spacecraft1.RAAN = 90.89;
GMAT Spacecraft1.AOP = 0;
GMAT Spacecraft1.TA = 1.707547292503188e-06;
GMAT Spacecraft1.DryMass = 850;
GMAT Spacecraft1.Cd = 2.2;
GMAT Spacecraft1.Cr = 1.8;
GMAT Spacecraft1.DragArea = 15;
GMAT Spacecraft1.SRPArea = 1;
GMAT Spacecraft1.SPADDragScaleFactor = 1;
GMAT Spacecraft1.SPADSRPScaleFactor = 1;
GMAT Spacecraft1.NAIFId = -10018001;
GMAT Spacecraft1.NAIFIdReferenceFrame = -9018001;
GMAT Spacecraft1.OrbitColor = Yellow;
GMAT Spacecraft1.TargetColor = DarkGray;
GMAT Spacecraft1.OrbitErrorCovariance = [ 1e+70 0 0 0 0 0 ; 0 1e+70 0 0 0 0 ; 0 0 1e+70 0 0 0 ; 0 0 0 1e+70 0 0 ; 0 0 0 0 1e+70 0 ; 0 0 0 0 0 1e+70 ];
GMAT Spacecraft1.CdSigma = 1e+70;
GMAT Spacecraft1.CrSigma = 1e+70;
GMAT Spacecraft1.Id = 'SatId';
GMAT Spacecraft1.Attitude = CoordinateSystemFixed;
GMAT Spacecraft1.SPADSRPInterpolationMethod = Bilinear;
GMAT Spacecraft1.SPADSRPScaleFactorSigma = 1e+70;
GMAT Spacecraft1.SPADDragInterpolationMethod = Bilinear;
GMAT Spacecraft1.SPADDragScaleFactorSigma = 1e+70;
GMAT Spacecraft1.ModelFile = 'aura.3ds';
GMAT Spacecraft1.ModelOffsetX = 0;
GMAT Spacecraft1.ModelOffsetY = 0;
GMAT Spacecraft1.ModelOffsetZ = 0;
GMAT Spacecraft1.ModelRotationX = 0;
GMAT Spacecraft1.ModelRotationY = 0;
GMAT Spacecraft1.ModelRotationZ = 0;
GMAT Spacecraft1.ModelScale = 1;
GMAT Spacecraft1.AttitudeDisplayStateType = 'Quaternion';
GMAT Spacecraft1.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT Spacecraft1.AttitudeCoordinateSystem = EarthMJ2000Eq;
GMAT Spacecraft1.EulerAngleSequence = '321';






















%----------------------------------------
%---------- ForceModels
%----------------------------------------

Create ForceModel NearMoonProp_ForceModel;
GMAT NearMoonProp_ForceModel.CentralBody = Luna;
GMAT NearMoonProp_ForceModel.PointMasses = {Sun, Earth, Luna};
GMAT NearMoonProp_ForceModel.Drag = None;
GMAT NearMoonProp_ForceModel.SRP = On;
GMAT NearMoonProp_ForceModel.RelativisticCorrection = Off;
GMAT NearMoonProp_ForceModel.ErrorControl = RSSStep;
GMAT NearMoonProp_ForceModel.SRP.Flux = 1367;
GMAT NearMoonProp_ForceModel.SRP.SRPModel = Spherical;
GMAT NearMoonProp_ForceModel.SRP.Nominal_Sun = 149597870.691;

Create ForceModel NearEarthProp_ForceModel;
GMAT NearEarthProp_ForceModel.CentralBody = Earth;
GMAT NearEarthProp_ForceModel.PointMasses = {Earth, Sun, Luna};
GMAT NearEarthProp_ForceModel.Drag = None;
GMAT NearEarthProp_ForceModel.SRP = On;
GMAT NearEarthProp_ForceModel.RelativisticCorrection = Off;
GMAT NearEarthProp_ForceModel.ErrorControl = RSSStep;
GMAT NearEarthProp_ForceModel.SRP.Flux = 1367;
GMAT NearEarthProp_ForceModel.SRP.SRPModel = Spherical;
GMAT NearEarthProp_ForceModel.SRP.Nominal_Sun = 149597870.691;

Create ForceModel EarthPointMass_ForceModel;
GMAT EarthPointMass_ForceModel.CentralBody = Earth;
GMAT EarthPointMass_ForceModel.PointMasses = {Earth};
GMAT EarthPointMass_ForceModel.Drag = None;
GMAT EarthPointMass_ForceModel.SRP = Off;
GMAT EarthPointMass_ForceModel.RelativisticCorrection = Off;
GMAT EarthPointMass_ForceModel.ErrorControl = RSSStep;

%----------------------------------------
%---------- Propagators
%----------------------------------------

Create Propagator NearMoonProp;
GMAT NearMoonProp.FM = NearMoonProp_ForceModel;
GMAT NearMoonProp.Type = RungeKutta89;
GMAT NearMoonProp.InitialStepSize = 60;
GMAT NearMoonProp.Accuracy = 9.999999999999999e-12;
GMAT NearMoonProp.MinStep = 0.001;
GMAT NearMoonProp.MaxStep = 86400;
GMAT NearMoonProp.MaxStepAttempts = 50;
GMAT NearMoonProp.StopIfAccuracyIsViolated = true;

Create Propagator NearEarthProp;
GMAT NearEarthProp.FM = NearEarthProp_ForceModel;
GMAT NearEarthProp.Type = RungeKutta89;
GMAT NearEarthProp.InitialStepSize = 60;
GMAT NearEarthProp.Accuracy = 9.999999999999999e-12;
GMAT NearEarthProp.MinStep = 0.001;
GMAT NearEarthProp.MaxStep = 160000;
GMAT NearEarthProp.MaxStepAttempts = 50;
GMAT NearEarthProp.StopIfAccuracyIsViolated = true;

Create Propagator EarthPointMass;
GMAT EarthPointMass.FM = EarthPointMass_ForceModel;
GMAT EarthPointMass.Type = RungeKutta89;
GMAT EarthPointMass.InitialStepSize = 60;
GMAT EarthPointMass.Accuracy = 9.999999999999999e-12;
GMAT EarthPointMass.MinStep = 0.001;
GMAT EarthPointMass.MaxStep = 2700;
GMAT EarthPointMass.MaxStepAttempts = 50;
GMAT EarthPointMass.StopIfAccuracyIsViolated = true;

%----------------------------------------
%---------- Burns
%----------------------------------------

Create ImpulsiveBurn TOI;
GMAT TOI.CoordinateSystem = Local;
GMAT TOI.Origin = Earth;
GMAT TOI.Axes = VNB;
GMAT TOI.Element1 = 3.051;
GMAT TOI.Element2 = 0;
GMAT TOI.Element3 = -0.0204;
GMAT TOI.DecrementMass = false;
GMAT TOI.Isp = 300;
GMAT TOI.GravitationalAccel = 9.81;

Create ImpulsiveBurn LOI;
GMAT LOI.CoordinateSystem = Local;
GMAT LOI.Origin = Luna;
GMAT LOI.Axes = VNB;
GMAT LOI.Element1 = -0.5;
GMAT LOI.Element2 = 0;
GMAT LOI.Element3 = 0;
GMAT LOI.DecrementMass = false;
GMAT LOI.Isp = 300;
GMAT LOI.GravitationalAccel = 9.81;

Create ImpulsiveBurn FinalBurn;
GMAT FinalBurn.CoordinateSystem = Local;
GMAT FinalBurn.Origin = Earth;
GMAT FinalBurn.Axes = VNB;
GMAT FinalBurn.Element1 = 0;
GMAT FinalBurn.Element2 = 0;
GMAT FinalBurn.Element3 = 0;
GMAT FinalBurn.DecrementMass = false;
GMAT FinalBurn.Isp = 300;
GMAT FinalBurn.GravitationalAccel = 9.81;

Create ImpulsiveBurn ImpulsiveBurn1;
GMAT ImpulsiveBurn1.CoordinateSystem = Local;
GMAT ImpulsiveBurn1.Origin = Luna;
GMAT ImpulsiveBurn1.Axes = VNB;
GMAT ImpulsiveBurn1.Element1 = 0.1;
GMAT ImpulsiveBurn1.Element2 = 0;
GMAT ImpulsiveBurn1.Element3 = 0;
GMAT ImpulsiveBurn1.DecrementMass = false;
GMAT ImpulsiveBurn1.Isp = 300;
GMAT ImpulsiveBurn1.GravitationalAccel = 9.81;

Create ImpulsiveBurn ImpulsiveBurn2;
GMAT ImpulsiveBurn2.CoordinateSystem = EarthMJ2000Eq;
GMAT ImpulsiveBurn2.Element1 = 0.1;
GMAT ImpulsiveBurn2.Element2 = 0;
GMAT ImpulsiveBurn2.Element3 = 0;
GMAT ImpulsiveBurn2.DecrementMass = false;
GMAT ImpulsiveBurn2.Isp = 300;
GMAT ImpulsiveBurn2.GravitationalAccel = 9.81;

%----------------------------------------
%---------- Coordinate Systems
%----------------------------------------

Create CoordinateSystem EarthMoonRot;
GMAT EarthMoonRot.Origin = Earth;
GMAT EarthMoonRot.Axes = ObjectReferenced;
GMAT EarthMoonRot.XAxis = R;
GMAT EarthMoonRot.ZAxis = N;
GMAT EarthMoonRot.Primary = Earth;
GMAT EarthMoonRot.Secondary = Luna;

Create CoordinateSystem MoonInertial;
GMAT MoonInertial.Origin = Luna;
GMAT MoonInertial.Axes = BodyInertial;

Create CoordinateSystem spacecraft1s;
GMAT spacecraft1s.Origin = Spacecraft1;
GMAT spacecraft1s.Axes = MJ2000Eq;

%----------------------------------------
%---------- Solvers
%----------------------------------------

Create DifferentialCorrector DC1;
GMAT DC1.ShowProgress = true;
GMAT DC1.ReportStyle = Normal;
GMAT DC1.ReportFile = 'DifferentialCorrectorDC1.data';
GMAT DC1.MaximumIterations = 200;
GMAT DC1.DerivativeMethod = ForwardDifference;
GMAT DC1.Algorithm = NewtonRaphson;

Create DifferentialCorrector DC2;
GMAT DC2.ShowProgress = true;
GMAT DC2.ReportStyle = Normal;
GMAT DC2.ReportFile = 'DifferentialCorrectorDC2.data';
GMAT DC2.MaximumIterations = 80;
GMAT DC2.DerivativeMethod = ForwardDifference;
GMAT DC2.Algorithm = Broyden;

%----------------------------------------
%---------- Subscribers
%----------------------------------------

Create OrbitView EarthMoonRotView;
GMAT EarthMoonRotView.SolverIterations = Current;
GMAT EarthMoonRotView.UpperLeft = [ 0.3982352941176471 0.08353808353808354 ];
GMAT EarthMoonRotView.Size = [ 0.5429411764705883 1.223587223587224 ];
GMAT EarthMoonRotView.RelativeZOrder = 347;
GMAT EarthMoonRotView.Maximized = true;
GMAT EarthMoonRotView.Add = {MoonSat, Spacecraft1, Earth, Luna};
GMAT EarthMoonRotView.CoordinateSystem = EarthMoonRot;
GMAT EarthMoonRotView.DrawObject = [ true true true true ];
GMAT EarthMoonRotView.DataCollectFrequency = 1;
GMAT EarthMoonRotView.UpdatePlotFrequency = 50;
GMAT EarthMoonRotView.NumPointsToRedraw = 0;
GMAT EarthMoonRotView.ShowPlot = true;
GMAT EarthMoonRotView.MaxPlotPoints = 20000;
GMAT EarthMoonRotView.ShowLabels = true;
GMAT EarthMoonRotView.ViewPointReference = Earth;
GMAT EarthMoonRotView.ViewPointVector = [ 10000 0 30000 ];
GMAT EarthMoonRotView.ViewDirection = Earth;
GMAT EarthMoonRotView.ViewScaleFactor = 40;
GMAT EarthMoonRotView.ViewUpCoordinateSystem = EarthMoonRot;
GMAT EarthMoonRotView.ViewUpAxis = -X;
GMAT EarthMoonRotView.EclipticPlane = Off;
GMAT EarthMoonRotView.XYPlane = Off;
GMAT EarthMoonRotView.WireFrame = Off;
GMAT EarthMoonRotView.Axes = Off;
GMAT EarthMoonRotView.Grid = Off;
GMAT EarthMoonRotView.SunLine = Off;
GMAT EarthMoonRotView.UseInitialView = On;
GMAT EarthMoonRotView.StarCount = 7000;
GMAT EarthMoonRotView.EnableStars = On;
GMAT EarthMoonRotView.EnableConstellations = Off;

Create OrbitView EarthMoonRotView2;
GMAT EarthMoonRotView2.SolverIterations = Current;
GMAT EarthMoonRotView2.UpperLeft = [ 0.5352941176470588 -0.02825552825552826 ];
GMAT EarthMoonRotView2.Size = [ 0.4564705882352941 1.116707616707617 ];
GMAT EarthMoonRotView2.RelativeZOrder = 1015;
GMAT EarthMoonRotView2.Maximized = true;
GMAT EarthMoonRotView2.Add = {MoonSat, Spacecraft1, Earth, Luna};
GMAT EarthMoonRotView2.CoordinateSystem = EarthMoonRot;
GMAT EarthMoonRotView2.DrawObject = [ true true true true ];
GMAT EarthMoonRotView2.DataCollectFrequency = 1;
GMAT EarthMoonRotView2.UpdatePlotFrequency = 50;
GMAT EarthMoonRotView2.NumPointsToRedraw = 0;
GMAT EarthMoonRotView2.ShowPlot = true;
GMAT EarthMoonRotView2.MaxPlotPoints = 20000;
GMAT EarthMoonRotView2.ShowLabels = true;
GMAT EarthMoonRotView2.ViewPointReference = Earth;
GMAT EarthMoonRotView2.ViewPointVector = [ 10000 0 30000 ];
GMAT EarthMoonRotView2.ViewDirection = Earth;
GMAT EarthMoonRotView2.ViewScaleFactor = 40;
GMAT EarthMoonRotView2.ViewUpCoordinateSystem = EarthMoonRot;
GMAT EarthMoonRotView2.ViewUpAxis = -X;
GMAT EarthMoonRotView2.EclipticPlane = Off;
GMAT EarthMoonRotView2.XYPlane = Off;
GMAT EarthMoonRotView2.WireFrame = Off;
GMAT EarthMoonRotView2.Axes = Off;
GMAT EarthMoonRotView2.Grid = Off;
GMAT EarthMoonRotView2.SunLine = Off;
GMAT EarthMoonRotView2.UseInitialView = On;
GMAT EarthMoonRotView2.StarCount = 7000;
GMAT EarthMoonRotView2.EnableStars = On;
GMAT EarthMoonRotView2.EnableConstellations = Off;

Create OrbitView MoonInertialView;
GMAT MoonInertialView.SolverIterations = Current;
GMAT MoonInertialView.UpperLeft = [ -0.008235294117647059 0.4004914004914005 ];
GMAT MoonInertialView.Size = [ 0.4235294117647059 0.5773955773955773 ];
GMAT MoonInertialView.RelativeZOrder = 1118;
GMAT MoonInertialView.Maximized = true;
GMAT MoonInertialView.Add = {MoonSat, Spacecraft1, Luna, Earth};
GMAT MoonInertialView.CoordinateSystem = MoonInertial;
GMAT MoonInertialView.DrawObject = [ true true true true ];
GMAT MoonInertialView.DataCollectFrequency = 1;
GMAT MoonInertialView.UpdatePlotFrequency = 50;
GMAT MoonInertialView.NumPointsToRedraw = 150;
GMAT MoonInertialView.ShowPlot = true;
GMAT MoonInertialView.MaxPlotPoints = 20000;
GMAT MoonInertialView.ShowLabels = true;
GMAT MoonInertialView.ViewPointReference = Luna;
GMAT MoonInertialView.ViewPointVector = [ 20000 20000 20000 ];
GMAT MoonInertialView.ViewDirection = Luna;
GMAT MoonInertialView.ViewScaleFactor = 1.5;
GMAT MoonInertialView.ViewUpCoordinateSystem = MoonInertial;
GMAT MoonInertialView.ViewUpAxis = Z;
GMAT MoonInertialView.EclipticPlane = Off;
GMAT MoonInertialView.XYPlane = Off;
GMAT MoonInertialView.WireFrame = Off;
GMAT MoonInertialView.Axes = Off;
GMAT MoonInertialView.Grid = Off;
GMAT MoonInertialView.SunLine = Off;
GMAT MoonInertialView.UseInitialView = On;
GMAT MoonInertialView.StarCount = 7000;
GMAT MoonInertialView.EnableStars = On;
GMAT MoonInertialView.EnableConstellations = Off;

Create OrbitView EarthInertialView;
GMAT EarthInertialView.SolverIterations = Current;
GMAT EarthInertialView.UpperLeft = [ 0.5155440414507773 0.5479115479115479 ];
GMAT EarthInertialView.Size = [ 0.6411917098445595 1.259213759213759 ];
GMAT EarthInertialView.RelativeZOrder = 5753;
GMAT EarthInertialView.Maximized = false;
GMAT EarthInertialView.Add = {MoonSat, Spacecraft1, Earth, Luna};
GMAT EarthInertialView.CoordinateSystem = EarthMJ2000Eq;
GMAT EarthInertialView.DrawObject = [ true true true true ];
GMAT EarthInertialView.DataCollectFrequency = 1;
GMAT EarthInertialView.UpdatePlotFrequency = 50;
GMAT EarthInertialView.NumPointsToRedraw = 0;
GMAT EarthInertialView.ShowPlot = true;
GMAT EarthInertialView.MaxPlotPoints = 20000;
GMAT EarthInertialView.ShowLabels = true;
GMAT EarthInertialView.ViewPointReference = Earth;
GMAT EarthInertialView.ViewPointVector = [ 0 0 30000 ];
GMAT EarthInertialView.ViewDirection = Earth;
GMAT EarthInertialView.ViewScaleFactor = 45;
GMAT EarthInertialView.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT EarthInertialView.ViewUpAxis = Z;
GMAT EarthInertialView.EclipticPlane = Off;
GMAT EarthInertialView.XYPlane = Off;
GMAT EarthInertialView.WireFrame = Off;
GMAT EarthInertialView.Axes = Off;
GMAT EarthInertialView.Grid = Off;
GMAT EarthInertialView.SunLine = Off;
GMAT EarthInertialView.UseInitialView = On;
GMAT EarthInertialView.StarCount = 7000;
GMAT EarthInertialView.EnableStars = On;
GMAT EarthInertialView.EnableConstellations = Off;

Create ReportFile ReportFile1;
GMAT ReportFile1.SolverIterations = Current;
GMAT ReportFile1.UpperLeft = [ 0.02352941176470588 0.2275 ];
GMAT ReportFile1.Size = [ 0.9 0.78875 ];
GMAT ReportFile1.RelativeZOrder = 33;
GMAT ReportFile1.Maximized = false;
GMAT ReportFile1.Filename = 'ReportFile1.txt';
GMAT ReportFile1.Precision = 16;
GMAT ReportFile1.Add = {MoonSat.EarthMJ2000Eq.RAAN, MoonSat.EarthMJ2000Eq.AOP, MoonSat.ElapsedDays, MoonSat.Earth.RadPer, MoonSat.Luna.RadPer, MoonSat.MoonInertial.BVectorAngle, MoonSat.Luna.RMAG, MoonSat.Earth.RMAG, MoonSat.MoonInertial.INC, TOI.Element1, TOI.Element2, TOI.Element3, LOI.Element1, LOI.Element2, LOI.Element3, FinalBurn.Element1, FinalBurn.Element2, FinalBurn.Element3, TOIBurn, LOIBurn, CircBurn, DV, Spacecraft1.Luna.RMAG};

%(TOI.Element1+TOI.Element2+TOI.Element3+LOI.Element1+LOI.Element2+LOI.Element3+FinalBurn.Element1+FinalBurn.Element2+ FinalBurn.Element3)

GMAT ReportFile1.WriteHeaders = true;
GMAT ReportFile1.LeftJustify = On;
GMAT ReportFile1.ZeroFill = Off;
GMAT ReportFile1.FixedWidth = true;
GMAT ReportFile1.Delimiter = ' ';
GMAT ReportFile1.ColumnWidth = 23;
GMAT ReportFile1.WriteReport = true;

Create ReportFile ReportFile2;
GMAT ReportFile2.SolverIterations = Current;
GMAT ReportFile2.UpperLeft = [ 0.02352941176470588 0.2275 ];
GMAT ReportFile2.Size = [ 0.9 0.78875 ];
GMAT ReportFile2.RelativeZOrder = 33;
GMAT ReportFile2.Maximized = false;
GMAT ReportFile2.Filename = 'ReportFile2.txt';
GMAT ReportFile2.Precision = 16;
GMAT ReportFile2.Add = {LOIBurn, TOIBurn, CircBurn, ImpulsiveBurn2.Element1, rendezvousBurn};

%(TOI.Element1+TOI.Element2+TOI.Element3+LOI.Element1+LOI.Element2+LOI.Element3+FinalBurn.Element1+FinalBurn.Element2+ FinalBurn.Element3)

GMAT ReportFile2.WriteHeaders = true;
GMAT ReportFile2.LeftJustify = On;
GMAT ReportFile2.ZeroFill = Off;
GMAT ReportFile2.FixedWidth = true;
GMAT ReportFile2.Delimiter = ' ';
GMAT ReportFile2.ColumnWidth = 23;
GMAT ReportFile2.WriteReport = true;

Create ReportFile ReportFile3;
GMAT ReportFile3.SolverIterations = Current;
GMAT ReportFile3.UpperLeft = [ 0.02352941176470588 0.2275 ];
GMAT ReportFile3.Size = [ 0.9 0.78875 ];
GMAT ReportFile3.RelativeZOrder = 33;
GMAT ReportFile3.Maximized = false;
GMAT ReportFile3.Filename = 'ReportFile3.txt';
GMAT ReportFile3.Precision = 16;
GMAT ReportFile3.Add = {MoonSat.MoonInertial.RAAN, DV, MoonSat.MoonInertial.X, Spacecraft1.MoonInertial.X, MoonSat.MoonInertial.Y, Spacecraft1.MoonInertial.Y, MoonSat.MoonInertial.Z, Spacecraft1.MoonInertial.Z, MoonSat.MoonInertial.VX, Spacecraft1.MoonInertial.VX, MoonSat.MoonInertial.VY, Spacecraft1.MoonInertial.VY, Spacecraft1.MoonInertial.VZ, MoonSat.MoonInertial.VZ, MoonSat.ElapsedDays};

%(TOI.Element1+TOI.Element2+TOI.Element3+LOI.Element1+LOI.Element2+LOI.Element3+FinalBurn.Element1+FinalBurn.Element2+ FinalBurn.Element3)

GMAT ReportFile3.WriteHeaders = true;
GMAT ReportFile3.LeftJustify = On;
GMAT ReportFile3.ZeroFill = Off;
GMAT ReportFile3.FixedWidth = true;
GMAT ReportFile3.Delimiter = ' ';
GMAT ReportFile3.ColumnWidth = 23;
GMAT ReportFile3.WriteReport = true;

Create OrbitView MoonInertialView2;
GMAT MoonInertialView2.SolverIterations = Current;
GMAT MoonInertialView2.UpperLeft = [ -0.1264705882352941 -0.01842751842751843 ];
GMAT MoonInertialView2.Size = [ 1.090588235294118 0.5933660933660934 ];
GMAT MoonInertialView2.RelativeZOrder = 349;
GMAT MoonInertialView2.Maximized = true;
GMAT MoonInertialView2.Add = {Spacecraft1, MoonSat, Luna, Earth};
GMAT MoonInertialView2.CoordinateSystem = MoonInertial;
GMAT MoonInertialView2.DrawObject = [ true true true true ];
GMAT MoonInertialView2.DataCollectFrequency = 1;
GMAT MoonInertialView2.UpdatePlotFrequency = 50;
GMAT MoonInertialView2.NumPointsToRedraw = 150;
GMAT MoonInertialView2.ShowPlot = true;
GMAT MoonInertialView2.MaxPlotPoints = 80000;
GMAT MoonInertialView2.ShowLabels = true;
GMAT MoonInertialView2.ViewPointReference = Luna;
GMAT MoonInertialView2.ViewPointVector = [ 20000 20000 20000 ];
GMAT MoonInertialView2.ViewDirection = Luna;
GMAT MoonInertialView2.ViewScaleFactor = 1.5;
GMAT MoonInertialView2.ViewUpCoordinateSystem = MoonInertial;
GMAT MoonInertialView2.ViewUpAxis = Z;
GMAT MoonInertialView2.EclipticPlane = Off;
GMAT MoonInertialView2.XYPlane = Off;
GMAT MoonInertialView2.WireFrame = Off;
GMAT MoonInertialView2.Axes = Off;
GMAT MoonInertialView2.Grid = Off;
GMAT MoonInertialView2.SunLine = Off;
GMAT MoonInertialView2.UseInitialView = On;
GMAT MoonInertialView2.StarCount = 7000;
GMAT MoonInertialView2.EnableStars = On;
GMAT MoonInertialView2.EnableConstellations = Off;

%----------------------------------------
%---------- Arrays, Variables, Strings
%----------------------------------------
Create Variable RAAN AOP DV TOIBurn LOIBurn CircBurn proptime DVX DVY DVZ;
Create Variable xcomp ycomp zcomp Dist rendezvousBurn RetroBurn;
GMAT proptime = 100;
GMAT DVX = 0;
GMAT DVY = 0;
GMAT DVZ = 0;
GMAT xcomp = 0;
GMAT ycomp = 0;
GMAT zcomp = 0;
GMAT Dist = 1000000;
GMAT rendezvousBurn = 0;
GMAT RetroBurn = 0;



















%----------------------------------------
%---------- Mission Sequence
%----------------------------------------
BeginMissionSequence;

%---------------------------------------------------------
%  First Target RAAN and AOP to get close to the moon
%--------------------------------------------------------- 

%  Set spacecraft required for reinizializatoin after coarse targeting.
GMAT InitSat = MoonSat;

Toggle 'Turn Off Selected Plots' EarthInertialView EarthMoonRotView2 MoonInertialView MoonInertialView2 Off;

%  This target loop varies the injection orbit RAAN and AOP to align the line of apsides with the moon. 
%  This is a course target loop that ensurues the s/c is in the vicinity of the Moon at orbit apogee.  
%  The RA and DEC contraints are applied in and Earth Moon rotating frame.  The x-axis points from Earth to Moon and
%  the z-axis is normal to the plane of the lunar orbit about Earth.  In this frame, we RA = 0 and DEC = 0;

Target 'Coarse Lunar Target' DC1 {SolveMode = Solve, ExitMode = SaveAndContinue, ShowProgressWindow = true};
   
   %  Vary parking orbit orientation
   Vary 'Vary RAAN' DC1(MoonSat.RAAN = 45.1, {Perturbation = .00001, Lower = -9.999999e300, Upper = 9.999999e300, MaxStep = 5, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   Vary 'Vary AOP' DC1(MoonSat.AOP = 2.5, {Perturbation = .00001, Lower = -9.999999e300, Upper = 9.999999e300, MaxStep = 5, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   
   %  Apply TOI
   Maneuver 'Apply TOI' TOI(MoonSat);
   
   %  Save variables for use in fine targeting loop
   GMAT 'Save RAAN' RAAN = MoonSat.RAAN;
   GMAT 'Save AOP' AOP = MoonSat.AOP;
   
   Propagate 'Prop To Moon' EarthPointMass(MoonSat) {MoonSat.Earth.Apoapsis, MoonSat.ElapsedDays = 3.24};
   
   %  Define the constraints that the line of apsides is aligned with moon
   Achieve 'RA = 0' DC1(MoonSat.EarthMoonRot.RA = 0, {Tolerance = 1});
   Achieve 'DEC = 0' DC1(MoonSat.EarthMoonRot.DEC = 0, {Tolerance = 1});
   
   
EndTarget;  % For targeter DC1

%---------------------------------------------------------
%  Next Target RAAN,,AOP, and Transfer orbit Maneveur to 
%  achieve desired B-plane 
%---------------------------------------------------------  

GMAT MoonSat = InitSat;
GMAT MoonSat.OrbitColor = 'Yellow';
Toggle MoonInertialView EarthInertialView EarthMoonRotView2 On;

Target 'Fine Lunar Target' DC1 {SolveMode = Solve, ExitMode = DiscardAndContinue, ShowProgressWindow = true};
   
   Vary 'Vary RAAN' DC1(MoonSat.RAAN = RAAN, {Perturbation = .000001, Lower = -9.999999e300, Upper = 9.999999e300, MaxStep = 2, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   Vary 'Vary AOP' DC1(MoonSat.AOP = AOP, {Perturbation = .000001, Lower = -9.999999e300, Upper = 9.999999e300, MaxStep = 2, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   Vary 'Vary TOI' DC1(TOI.Element1 = TOI.Element1, {Perturbation = .0000001, Lower = -9.999999e300, Upper = 9.999999e300, MaxStep = .01, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   Vary 'Vary TOI' DC1(TOI.Element3 = TOI.Element3, {Perturbation = .0000001, Lower = -9.999999e300, Upper = 9.999999e300, MaxStep = .01, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   
   Maneuver 'Apply TOI' TOI(MoonSat);
   
   GMAT 'Save RAAN' RAAN = MoonSat.RAAN;
   GMAT 'Save AOP' AOP = MoonSat.AOP;
   
   Propagate 'Prop To Moon' NearEarthProp(MoonSat) {MoonSat.Luna.Periapsis};
   
   Achieve 'Achieve RadPer' DC1(MoonSat.Luna.RMAG = 3535.8, {Tolerance = 0.1});
   
   Propagate 'Prop Distance' NearMoonProp(MoonSat) {MoonSat.Luna.RMAG = 66000};  %Edge of Lunar Sphere of Influence
   
   Propagate 'Prop Distance' NearEarthProp(MoonSat) {MoonSat.Luna.RMAG = 250000};  %Edge of Lunar Sphere of Influence
   
   Achieve 'Achieve Return' DC1(MoonSat.Earth.RadPer = 6478, {Tolerance = 10});
   
EndTarget;  % For targeter DC1

Propagate 'Prop 3.24 days' NearEarthProp(MoonSat) {MoonSat.Earth.RMAG = 6900};

%---------------------------------------------------------
%  Next Target RAAN,,AOP, and Transfer orbit Maneveur to 
%  achieve desired B-plane 
%---------------------------------------------------------  


GMAT MoonSat = InitSat;

Maneuver 'Apply TOI' TOI(MoonSat);

GMAT MoonSat.RAAN = RAAN;
GMAT MoonSat.AOP = AOP;
GMAT MoonSat.OrbitColor = 'Cyan';

%Maneuver 'Apply TOI' TOI(MoonSat);

%Propagate 'Prop To Moon' NearEarthProp(MoonSat) {MoonSat.Luna.RMAG = 66000};
Propagate 'Prop To Moon' NearEarthProp(MoonSat) {MoonSat.Luna.RMAG = 66000};
Propagate NearMoonProp(Spacecraft1) {Spacecraft1.UTCModJulian = MoonSat.UTCModJulian};
Toggle MoonInertialView2 On;

Target 'Lunar Orbit Target' DC1 {SolveMode = Solve, ExitMode = DiscardAndContinue, ShowProgressWindow = true};
   
   Vary 'Vary LOI' DC1(LOI.Element1 = LOI.Element1, {Perturbation = .00001, Lower = -9.999999e300, Upper = 9.999999e300, MaxStep = .3, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   Vary 'Vary LOI' DC1(LOI.Element2 = LOI.Element2, {Perturbation = .00001, Lower = -9.999999e300, Upper = 9.999999e300, MaxStep = .3, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   Vary 'Vary LOI' DC1(LOI.Element3 = LOI.Element3, {Perturbation = .00001, Lower = -9.999999e300, Upper = 9.999999e300, MaxStep = .3, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   
   Maneuver 'Apply LOI' LOI(MoonSat);
   Propagate NearMoonProp(MoonSat, Spacecraft1) {MoonSat.Luna.Periapsis};
   
   Achieve 'Achieve RadPer' DC1(MoonSat.Luna.RadPer = 2500, {Tolerance = 0.1});
   
   Achieve 'Achieve Lunar INC' DC1(MoonSat.MoonInertial.INC = 90, {Tolerance = 0.1});
   %Achieve 'Achieve BvectorAngle' DC1(MoonSat.MoonInertial.BVectorAngle = -89, {Tolerance = 0.1});
   
EndTarget;  % For targeter DC1

Target 'Lunar Orbit Circularization' DC1 {SolveMode = Solve, ExitMode = DiscardAndContinue, ShowProgressWindow = true};
   
   Vary 'Vary LOI' DC1(FinalBurn.Element1 = FinalBurn.Element1, {Perturbation = .00001, Lower = -9.999999e300, Upper = 9.999999e300, MaxStep = .3, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   Vary 'Vary LOI' DC1(FinalBurn.Element2 = FinalBurn.Element2, {Perturbation = .00001, Lower = -9.999999e300, Upper = 9.999999e300, MaxStep = .3, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   Vary 'Vary LOI' DC1(FinalBurn.Element3 = FinalBurn.Element3, {Perturbation = .00001, Lower = -9.999999e300, Upper = 9.999999e300, MaxStep = .3, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   
   Maneuver 'Apply Final Burn' FinalBurn(MoonSat);
   
   Achieve 'Achieve ECC' DC1(MoonSat.Luna.ECC = 0.00, {Tolerance = 0.01});
   %Achieve 'Achieve Lunar INC' DC1(MoonSat.MoonInertial.INC = 90, {Tolerance = 0.1});
   %Achieve 'Achieve BvectorAngle' DC1(MoonSat.MoonInertial.BVectorAngle = -89, {Tolerance = 0.1});
   
   GMAT TOIBurn = sqrt(TOI.Element1^2 + TOI.Element2^2 + TOI.Element3^2);
   GMAT LOIBurn = sqrt(LOI.Element1^2 + LOI.Element2^2 + LOI.Element3^2);
   GMAT CircBurn = sqrt(FinalBurn.Element1^2 + FinalBurn.Element2^2 + FinalBurn.Element3^2);
   GMAT DV = TOIBurn + LOIBurn + CircBurn;
   
EndTarget;  % For targeter DC1
GMAT ImpulsiveBurn1.Element1 = (sqrt(4904.9*(2/MoonSat.Luna.RMAG-1/(Spacecraft1.Luna.RMAG*0.5+MoonSat.Luna.RMAG*0.5)))-MoonSat.MoonInertial.VMAG)*1.05;
Target DC1 {SolveMode = Solve, ExitMode = DiscardAndContinue, ShowProgressWindow = true};
   Vary DC1(proptime = 4000, {Perturbation = 0.01, Lower = 0, Upper = 10000, MaxStep = 20, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   Propagate NearMoonProp(MoonSat, Spacecraft1) {MoonSat.ElapsedSecs = proptime};
   Maneuver ImpulsiveBurn1(MoonSat);
   Propagate NearMoonProp(MoonSat, Spacecraft1) {MoonSat.Luna.RMAG = Spacecraft1.Luna.RMAG};
   GMAT Dist = sqrt((MoonSat.MoonInertial.X-Spacecraft1.MoonInertial.X)^2+(MoonSat.MoonInertial.Y-Spacecraft1.MoonInertial.Y)^2+(MoonSat.MoonInertial.Z-Spacecraft1.MoonInertial.Z)^2);
   Achieve DC1(Dist = 10, {Tolerance = 10});
EndTarget;  % For targeter DC1


GMAT ImpulsiveBurn2.Element1 = Spacecraft1.EarthMJ2000Eq.VX-MoonSat.EarthMJ2000Eq.VX;
GMAT ImpulsiveBurn2.Element2 = Spacecraft1.EarthMJ2000Eq.VY-MoonSat.EarthMJ2000Eq.VY;
GMAT ImpulsiveBurn2.Element3 = Spacecraft1.EarthMJ2000Eq.VZ-MoonSat.EarthMJ2000Eq.VZ;
GMAT RetroBurn = sqrt(ImpulsiveBurn1.Element1^2);
GMAT rendezvousBurn = sqrt(ImpulsiveBurn2.Element1^2+ImpulsiveBurn2.Element2^2+ImpulsiveBurn2.Element3^2);
GMAT DV = DV+rendezvousBurn+RetroBurn;
Maneuver ImpulsiveBurn2(MoonSat);
Propagate NearMoonProp(MoonSat, Spacecraft1) {MoonSat.ElapsedSecs = 12000};
